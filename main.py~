import json
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes

# подгрузка токена и json с валидными id
def load_token():
    with open('token.txt', 'r') as file:
        token = file.read().strip()
    return token

TOKEN = load_token()

def load_admins():
    with open('admins.json', 'r') as file:
        data = json.load(file)
    return data["admins"]

VALID_ADMIN_IDS = load_admins()

# Стартовое сообщение с кнопками admin_panel и персонал
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # Встроенная клавиатура с кнопками
    inline_keyboard = [
        [InlineKeyboardButton("Admin Panel", callback_data='admin_panel')],
        [InlineKeyboardButton("Персонал", callback_data='personnel')]
    ]
    reply_markup_inline = InlineKeyboardMarkup(inline_keyboard)

    # Кнопка "Start" для постоянного отображения рядом с полем ввода
    reply_keyboard = [[KeyboardButton("Start")]]
    reply_markup_reply = ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True, one_time_keyboard=False)

    # Отправка сообщения с двумя клавиатурами
    await update.message.reply_text(
        "Добрый день, авторизируйтесь в системе:",
        reply_markup=reply_markup_inline
    )
    await update.message.reply_text(
        "Выберите действие:",
        reply_markup=reply_markup_reply
    )

# Обработчик нажатий кнопок
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id

    # Проверка нажатой кнопки
    if query.data == 'admin_panel':
        if user_id in VALID_ADMIN_IDS:
            await query.edit_message_text("Добро пожаловать в админ панель!")
        else:
            await query.edit_message_text("Доступ разрешен только для администраторов!")
    elif query.data == 'personnel':
        await query.edit_message_text("Раздел 'Персонал'. Здесь информация о сотрудниках.")

# Обработчик для кнопки "Start" в ReplyKeyboardMarkup
async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == "Start":
        await start(update, context)

if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
    app.run_polling()
